toString에 관한 내용 (050423)

    toString은 System.out.print(객체);와 같이 객체를 출력할 때만 동작하는 것이 아니다.
    객체의 메소드 실행 중, toString에 들어가는 부분의 내용이 바뀐다면 실시간으로 이것이 반영된다.
    다음을 예로 들면

    class My_Class {
        int x;
        ...
        void set_x(int n) {
            this.x = n; ---> 3
            System.out.printf("NEW x: $d\n", this.x); ---> 4
        }
        public String toString() {
            return this.getClass() + ".x: " + this.x;
        }
    }

    public class Test {
        public static void main(String[] args) {
            My_Class a = new My_Class();

            a.set_x(10); ---> 0
            System.out.println(a);

            a.set_x(999); ---> 1
            System.out.println(a); ---> 2
        }
    }

    0 이후 toString이 한 번 더 호출되는 시점은 2가 아니라 3이다.

    +++ toString의 존재 의의는 편한 디버깅이지 클래스를 문자열로 뽑아내는 것이 아니었다



트리를 예쁘게 출력하는 방법
    1. 큐를 활용한다: 자식 노드 삽입
    2. 각 레벨의 첫 번째 원소를 알아야 한다

    *** 시도 1: '키 값이 점점 커지다 갑자기 작아지는 때가 레벨이 변하는 때다'는 반례 존재
                >>> 레벨 첫 번째 원소가 전 레벨 마지막 원소보다 클 경우 (내 사례로는 레벨 4 >>> 레벨 5)
    *** 시도 2: 백트레킹하는 방식은 내 머리가 나빠서 구현 못함



이진탐색트리 reshaping: 균형 탐색 트리로 재형성하는 방법
    핵심: 중위 탐색 활용



아이디어: 힙은 후위 탐색을 활용할 수 있지 않을까?
